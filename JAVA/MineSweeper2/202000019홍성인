

-----------------------------------------------------------------
-지뢰찾기 로직

그래픽 구현 x
import는 random, scanner 사용하기


main
배열설정: board,ismine,revealed 

initializeboard
땅을 문자(-)로 그래픽처럼 구현
이때 ismine과 revealed는 false처리

putmines
random함수를 사용하여 폭탄을 배열에 랜덤으로 설치

hint
주변지뢰의 개수를 확인하여 셀에 숫자로 힌트를 알려줌 숫자는 문자로 변환하여 board 배열에 저장

countmines 
주변에 있는 지뢰의 개수를 세고 선택 셀 주변 8개의 셀을 확인하고 지뢰가 있으면 count를 증가

printboard
현재 게임 보드의 상태를 출력하는 역할로 지뢰가 있거나 이미 공개된 셀은 해당 내용을 출력하고 그렇지 않으면'-'을 출력한다

revealcell
주어진 행과 열에 해당하는 셀을 공개하는 역할

play
게임실행하는 역할

check win
지뢰가 아닌 모든 셀이 열리면 승리하는 역할


자바언어를 처음 사용하다 보니 로직을 구성하는것도 어려웠지만 구현을 어떻게 할 지 감이 안와서 어쩔수없이 인터넷을 뒤적이게 되었다.


그래픽 구현을 하려면 다양한 패키지를 import해야 했기에 터미널에서 표현할 수 있는 최적의 방안으로 구현하기로 했다. 처음에는 터미널에서 보드를 설정하기위해 배열을 (행,열)로 설정을 했고, 이 보드의 크기를 상수로 정해서 사용했다.처음에 보드를 설정할 때 기호가 아닌 한글 ㅁ으로 나타내고 싶었지만 ㅁ으로 나타내니 게임실행중에 점점 보드가 깨지는게 보였다. 그래서 어쩔수 없이 기호인 '-'으로 나타내었다. 
 로직을 만들면서 생각보다 까다로웠던 것은 선택셀 포함 주변에 있는 8칸에 지뢰가 없으면 지뢰가 없는, 즉 숫자가 있는 곳까지 reveal을 해야하는데, 이를 해결하는 것이 가장 어렵게 느껴졌다. 추가적으로 기능을 추가해서 보드의 크기와 지뢰의 개수를 사용자로부터 입력받을 수 있게 다시 구성했다. 그런데 이상하게도 메서드로 사용자로부터 행과 열을 받아서 보드를 생성하고나면

-----------------------------------------------------------------
Exception in thread "main" java.util.NoSuchElementException
        at java.base/java.util.Scanner.throwFor(Scanner.java:937)
        at java.base/java.util.Scanner.next(Scanner.java:1594)
        at java.base/java.util.Scanner.nextInt(Scanner.java:2258)
        at java.base/java.util.Scanner.nextInt(Scanner.java:2212)
        at POWER_JAVA.MineSweeper2.main.play(main.java:132)
        at POWER_JAVA.MineSweeper2.main.main(main.java:162)
-----------------------------------------------------------------

와 같은 문제가 발생했다. 위에 대한 문제를 해결하기위해 구글링을 한 결과 Scanner과 관련이 있다고 나와있었다.
NOsuchElementException은 사용자가 제대로된 입력을 제공하지 않아서 발생한다고 했다. 나는 터미널에서 나의 타이핑입력이 잘못되었거나 자료형을 잘못 입력해서 그런줄 알았지만 이런것이 문제가 아닌, scanner close()에서 문제가 발생했음을 알 수 있었다. 공부를 할 때 scanner close를 써주는 습관을 들이는 것이 좋다고해서 사용했지만, 리소스를 사용하는 경우에는 scanner close를 사용해도 되지만 내가 구현하는 것처럼 단순 키보드 입력의 경우 close를 해주지 않아도 된다고 알수 있었다. 그래서 scanner close가 들어간 메소드 play()와 getBoardSize()를 수정해줬더니 올바르게 작동했다. 이 단순한 게임을 그래픽없이 구현하는데도 솔직히 어렵다고 체감이 되었다. 물론 새로운 언어이기에 구현이 바로바로 되지는 않는 것이 당연하지만 아직도 연습이 많이 필요하다고 생각했고, 알고리즘 문제들을 자주 풀어봐야겠다고 느꼈다.

추가적으로 그래픽으로 구현된 다른 사람의 코드를 한 번 리뷰해보았다. 그래픽으로 구현하는 만큼 import해야하는 것이 많았다. 로직은 비슷했지만 이미지를 불러오는것이기에 이미지의 경로를 설정하는것이나, 추가적인 기능으로 깃발을 표시하여 본인이 지뢰의 위치를 임시적으로 표시하고 지울수있는것이 신기했다. 점수를 통해 나의 점수기록을 알 수 있게 구현했는데, Git에 올라온 이 사람의 코드처럼 구현하려면 반년은 더 걸릴것같다고 생각했다. 그만큼 완성도가 높았기에 다음에 따라하고 싶은 욕구가 생겼다.